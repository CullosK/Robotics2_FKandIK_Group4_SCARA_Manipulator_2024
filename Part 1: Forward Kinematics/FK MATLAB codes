disp('SCARA')

syms a1 a2 a3 a4 a5 t1 t2 d3

%% Link lengths

a1 = 3;
a2 = 3;
a3 = 3;
a4 = 3;
a5 = 3;
%% Joint Variables
d3 = 4;

%% D-H Parameters [theta, d, r, alpha, offset]
% if prismatic joint: theta = theta, d = 0, offset = 1, after offset put the value of d
% if revolute joint: theta = 0,offset = 0, after offset put the value of theta

H0_1 = Link([0,a1,a2,0,0,0]);
H0_1.qlim = [-pi/2 pi/2];

H1_2 = Link([0,a3,a4,pi,0,0]);
H1_2.qlim = [-pi/2 pi/2];

H2_3 = Link([0,0,0,0,1,a5]);
H2_3.qlim = [0 d3];

Scara = SerialLink([H0_1 H1_2 H2_3], 'name', 'SCARA')
Scara.plot([0,0,0], 'workspace', [-10 10 -10 10 -2 10])
Scara.teach

%% Forward Kinematics
fkin = [0 0]; % Values of Joint Variables
F_Kin = Scara.fkine(fkin)

fkin_1 = [pi/2 -pi/2]
F_Kin_1 = Scara.fkine(fkin_1)

